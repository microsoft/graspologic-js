// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   ../@graspologic/memstore
//   ../math.gl

declare module '@graspologic/luma-utils' {
    export * from '@graspologic/luma-utils/shaders';
    export * from '@graspologic/luma-utils/idFactory';
    export * from '@graspologic/luma-utils/adaptMemoryLayoutToLuma';
    export * from '@graspologic/luma-utils/glTypeMappings';
    export * from '@graspologic/luma-utils/glConstants';
    export * from '@graspologic/luma-utils/pickingColors';
    export * from '@graspologic/luma-utils/lerp3';
    export * from '@graspologic/luma-utils/slerp';
}

declare module '@graspologic/luma-utils/shaders' {
    export * from '@graspologic/luma-utils/shaders/tween';
}

declare module '@graspologic/luma-utils/idFactory' {
    export function createIdFactory(seedString: string): () => string;
}

declare module '@graspologic/luma-utils/adaptMemoryLayoutToLuma' {
    import { MemoryLayout } from '@graspologic/memstore';
    /**
      * @internal
      *
      * Adapts the given memory layout for use in luma.gl
      * @param gl The rendering context
      * @param layout The memory layout
      * @param glTypeMapping The optional mapping from attribute to the webgl underlying type
      */
    export function adaptMemoryLayoutToLuma(gl: WebGLRenderingContext, layout: MemoryLayout, glTypeMapping?: {
        [name: string]: {
            glType: number;
            size: number;
        };
    }): {
        attributes: any;
        buffer: any;
    };
}

declare module '@graspologic/luma-utils/glTypeMappings' {
    /**
        * @internal
        *
        * How we represent color in webgl land
        */
    export const uint32ColorTypeMapping: {
            glType: number;
            size: number;
    };
}

declare module '@graspologic/luma-utils/glConstants' {
    export const GL_DEPTH_TEST = 2929;
    export const GL_POINTS = 0;
    export const GL_LINES = 1;
    export const GL_LINE_LOOP = 2;
    export const GL_LINE_STRIP = 3;
    export const GL_TRIANGLES = 4;
    export const GL_TRIANGLE_STRIP = 5;
    export const GL_TRIANGLE_FAN = 6;
    export const GL_BYTE = 5120;
    export const GL_UNSIGNED_BYTE = 5121;
    export const GL_SHORT = 5122;
    export const GL_UNSIGNED_SHORT = 5123;
    export const GL_INT = 5124;
    export const GL_UNSIGNED_INT = 5125;
    export const GL_FLOAT = 5126;
    export const GL_NEAREST = 9728;
    export const GL_LINEAR = 9729;
    export const GL_NEAREST_MIPMAP_NEAREST = 9984;
    export const GL_LINEAR_MIPMAP_NEAREST = 9985;
    export const GL_NEAREST_MIPMAP_LINEAR = 9986;
    export const GL_LINEAR_MIPMAP_LINEAR = 9987;
    export const GL_TEXTURE_MAG_FILTER = 10240;
    export const GL_TEXTURE_MIN_FILTER = 10241;
    export const GL_TEXTURE_WRAP_S = 10242;
    export const GL_TEXTURE_WRAP_T = 10243;
    export const GL_TEXTURE_2D = 3553;
    export const GL_TEXTURE = 5890;
    export const GL_TEXTURE_CUBE_MAP = 34067;
    export const GL_TEXTURE_BINDING_CUBE_MAP = 34068;
    export const GL_TEXTURE_CUBE_MAP_POSITIVE_X = 34069;
    export const GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 34070;
    export const GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 34071;
    export const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072;
    export const GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 34073;
    export const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074;
    export const GL_MAX_CUBE_MAP_TEXTURE_SIZE = 34076;
    export const GL_ACTIVE_TEXTURE = 34016;
    export const GL_REPEAT = 10497;
    export const GL_CLAMP_TO_EDGE = 33071;
    export const GL_MIRRORED_REPEAT = 33648;
    export const GL_DEPTH_COMPONENT = 6402;
    export const GL_ALPHA = 6406;
    export const GL_RGB = 6407;
    export const GL_RGBA = 6408;
    export const GL_LUMINANCE = 6409;
    export const GL_LUMINANCE_ALPHA = 6410;
    export const GL_ZERO = 0;
    export const GL_ONE = 1;
    export const GL_SRC_COLOR = 768;
    export const GL_ONE_MINUS_SRC_COLOR = 769;
    export const GL_SRC_ALPHA = 770;
    export const GL_ONE_MINUS_SRC_ALPHA = 771;
    export const GL_DST_ALPHA = 772;
    export const GL_ONE_MINUS_DST_ALPHA = 773;
    export const GL_DST_COLOR = 774;
    export const GL_ONE_MINUS_DST_COLOR = 775;
    export const GL_SRC_ALPHA_SATURATE = 776;
    export const GL_CONSTANT_COLOR = 32769;
    export const GL_ONE_MINUS_CONSTANT_COLOR = 32770;
    export const GL_CONSTANT_ALPHA = 32771;
    export const GL_ONE_MINUS_CONSTANT_ALPHA = 32772;
    export const GL_FUNC_ADD = 32774;
    export const GL_FUNC_SUBTRACT = 32778;
    export const GL_FUNC_REVERSE_SUBTRACT = 32779;
    export const GL_FRAMEBUFFER = 36160;
    export const GL_RENDERBUFFER = 36161;
    export const GL_RGBA4 = 32854;
    export const GL_RGB5_A1 = 32855;
    export const GL_RGB565 = 36194;
    export const GL_DEPTH_COMPONENT16 = 33189;
    export const GL_STENCIL_INDEX8 = 36168;
    export const GL_DEPTH_STENCIL = 34041;
    export const GL_RENDERBUFFER_WIDTH = 36162;
    export const GL_RENDERBUFFER_HEIGHT = 36163;
    export const GL_RENDERBUFFER_INTERNAL_FORMAT = 36164;
    export const GL_RENDERBUFFER_RED_SIZE = 36176;
    export const GL_RENDERBUFFER_GREEN_SIZE = 36177;
    export const GL_RENDERBUFFER_BLUE_SIZE = 36178;
    export const GL_RENDERBUFFER_ALPHA_SIZE = 36179;
    export const GL_RENDERBUFFER_DEPTH_SIZE = 36180;
    export const GL_RENDERBUFFER_STENCIL_SIZE = 36181;
    export const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048;
    export const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049;
    export const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050;
    export const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051;
    export const GL_COLOR_ATTACHMENT0 = 36064;
    export const GL_DEPTH_ATTACHMENT = 36096;
    export const GL_STENCIL_ATTACHMENT = 36128;
    export const GL_DEPTH_STENCIL_ATTACHMENT = 33306;
    export const GL_NONE = 0;
    export const GL_FRAMEBUFFER_COMPLETE = 36053;
    export const GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054;
    export const GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055;
    export const GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057;
    export const GL_FRAMEBUFFER_UNSUPPORTED = 36061;
    export const GL_FRAMEBUFFER_BINDING = 36006;
    export const GL_RENDERBUFFER_BINDING = 36007;
    export const GL_MAX_RENDERBUFFER_SIZE = 34024;
    export const GL_INVALID_FRAMEBUFFER_OPERATION = 1286;
}

declare module '@graspologic/luma-utils/pickingColors' {
    export type PickingColor = Uint8Array | Uint16Array | Float32Array;
    export function encodePickingColor(index: number): number[];
    export function decodePickingColor(color: PickingColor): number;
    export function getNullPickingColor(): Uint8Array;
}

declare module '@graspologic/luma-utils/lerp3' {
    import { Vector3 } from 'math.gl';
    /**
        * Linear interpolates between two Vector3 objects
        * @param start The start value
        * @param end The end value
        * @param interpolation The interpolation value 0 - 1
        */
    export function lerp3(start: Vector3, end: Vector3, interpolation: number): Vector3;
}

declare module '@graspologic/luma-utils/slerp' {
    import { Quaternion } from 'math.gl';
    /**
        * Spherically interpolates the camera rotation between the 2D view and the 3D view
        * @param current The current value
        * @param next The next value
        * @param interpolation The interpolation value 0 - 1
        */
    export function slerp(current: Quaternion, next: Quaternion, interpolation: number): Quaternion;
}

declare module '@graspologic/luma-utils/shaders/tween' {
    export const tween: {
        name: string;
        vs: any;
        fs: null;
        dependencies: {
            name: string;
            vs: any;
            fs: null;
            dependencies: never[];
            deprecations: never[];
        }[];
        deprecations: never[];
    };
}

